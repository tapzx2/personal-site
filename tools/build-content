# build content

# for item in layout
#   if item is .html
#      buildHtml(item)
#   if item is directory
#      buildHtml(buildBlurbBody(item))

# def getTitle(page):
#   if page is .html
#     read file
#     find <h1> tag
#     return inner contents of <h1> tag
#   elif page is directory
#     return cleanUp(page)

# def buildHtml(page):
#   if page is string:
#      body = page
#   else:
#      body = read file
#   append(prehead)
#   append(getTitle(page))
#   append(posthead)
#   append(body)
#   append(tail)

# def buildBlurb(page):
#    body = ""
#    blurbs = list(contentes of page).reverseSort
#    for blurb in blurbs:
#       body += blurb
#    return body

import os
import re

www = os.path.expanduser("~/personal-site/www/")
layout = os.path.expanduser("~/personal-site/layout/")

prehead = """<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
"""

posthead = """</title>
</head>
<body>"""

tail = """</body>
</html>
"""

# clear and make freshhhhhhhh
def startFresh(file):
    if os.path.isfile(file):
        os.remove(file)
        file1 = open(f"{file}", "w")
        file1.close()


# write output to file
def append(string, file):
    file1 = open(file, "a")
    file1.write(string)
    file1.close()


# strip sort
def stripSort(string):
    return re.sub('^[0-9]*-', '', string)


# clean string
def cleanUp(string):
    return stripSort(string).replace("-", " ")


# strip html
def striphtml(string):
    return string.replace(".html", "")

# def getTitle(page):
#   if page is .html
#     read file
#     find <h1> tag
#     return inner contents of <h1> tag
#   elif page is directory
#     return cleanUp(page)
def getTitle(file):
    return "TITLE"

# def buildBlurbBody(page):
#    body = ""
#    blurbs = list(contentes of page).reverseSort
#    for blurb in blurbs:
#       body += blurb
#    return body
def buildBlurbBody(input):
    return "blurbbodystring"

# write components of html file
def buildHtml(input, saveLoc, name):
    if os.path.isfile(input):
        page = saveLoc + stripSort(name)
        with open(input, 'r') as body:
            body = body.read()
    else:
        page = saveLoc + stripSort(name) + ".html"
        body = input

    startFresh(page)
    append(prehead, page)
    append(getTitle(input), page)
    append(posthead, page)
    append(body, page)
    append(tail, page)

# main
headers = sorted(os.listdir(layout))
for h3 in headers:
    if os.path.isdir(layout+h3):
        for name in sorted(os.listdir(layout+h3)):
            path = layout+h3+"/"+name
            if name[-5:] == ".html":
                #print("item is html: " + item)
                buildHtml(path, www, name)
            elif os.path.isdir(path):
                print("item is directory: " + name)
                buildHtml(buildBlurbBody(path), www, name)
            else:
                print("item is neither .html file or directory: " + name)









body = ""
headers = sorted(os.listdir(layout))
for h3 in headers:
    if h3[0] != ".":
        body += f"<h3>{cleanUp(h3)}</h3>\n"
        for link in sorted(os.listdir(layout+h3)):
            if link[0] != ".":
                if os.path.isdir(layout+h3+"/"+link):
                    body += f'<p><a href="{stripSort(link)}.html">{cleanUp(link)}</a></p>' + '\n'
                else:
                    body += f'<p><a href="{stripSort(link)}">{striphtml(cleanUp(link))}</a></p>' + '\n'

